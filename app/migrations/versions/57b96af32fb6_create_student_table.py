"""create_student_table

Revision ID: 57b96af32fb6
Revises: fae321b7b707
Create Date: 2022-11-14 13:50:55.167057

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision = "57b96af32fb6"
down_revision = "fae321b7b707"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "students",
        sa.Column("id", sqlalchemy_utils.types.uuid.UUIDType(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("statement_timestamp()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("statement_timestamp()"), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("first_name", sa.Text(), nullable=False),
        sa.Column("last_name", sa.Text(), nullable=False),
        sa.Column("date_of_birth", sa.Date(), nullable=False),
        sa.Column("number_of_classes", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###
    op.execute(
        """
        CREATE TRIGGER students_update_timestamp BEFORE UPDATE ON students FOR EACH ROW EXECUTE PROCEDURE update_modified_date();
        CREATE TRIGGER students_soft_delete BEFORE DELETE ON students FOR EACH ROW EXECUTE PROCEDURE soft_delete();
        """
    )


def downgrade():
    op.execute(
        """
        DROP TRIGGER students_soft_delete ON students;
        DROP TRIGGER students_update_timestamp ON students;
        """
    )
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("students")
    # ### end Alembic commands ###
